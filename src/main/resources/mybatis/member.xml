<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace = "dev.mvc.member.MemberDAOInter">

    <select id="checkID" resultType="int" parameterType="String">
      SELECT COUNT(id) as cnt
      FROM member
      WHERE id=#{id}
    </select>
    
    <select id="checkEmail" resultType="int" parameterType="String">
      SELECT COUNT(*) 
      FROM member
      WHERE email = #{email}
    </select>
      
    <insert id="create" parameterType="dev.mvc.member.MemberVO">
      INSERT INTO member(memberid, id, passwd, name, phone, email, address, grade)
      VALUES (member_seq.nextval, #{id}, #{passwd}, #{name}, #{phone}, #{email}, #{address}, #{grade})
    </insert>
    
    <select id="list" resultType="dev.mvc.member.MemberVO">
      SELECT memberid, id, passwd, name, phone, email, address, grade
      FROM member
      ORDER BY memberid ASC
    </select> 
    
    <!-- memberid로 회원 정보 조회 -->
    <select id="read" resultType="dev.mvc.member.MemberVO" parameterType="int">
      SELECT memberid, id, passwd, name, phone, email, address, grade
      FROM member
      WHERE memberid = #{memberid}
    </select>
    
    <!-- id로 회원 정보 조회 -->
    <select id="readById" resultType="dev.mvc.member.MemberVO" parameterType="String">
      SELECT memberid, id, passwd, name, phone, email, address, grade
      FROM member
      WHERE id = #{id}
    </select>
    
    <update id="update" parameterType="dev.mvc.member.MemberVO">
      UPDATE member 
      SET name=#{name}, phone=#{phone}, address=#{address}
      WHERE memberid=#{memberid}
    </update>
    
    <delete id="delete" parameterType="int">
      DELETE FROM member
      WHERE memberid=#{memberid} 
    </delete>
    
    <delete id="delete_update" parameterType="int">
      UPDATE member
      SET grade = 99
      WHERE memberid=#{memberid}
    </delete>

    <!-- 현재 패스워드 검사 -->
    <select id="passwd_check" parameterType="HashMap" resultType="int">
      SELECT COUNT(memberid) as cnt
      FROM member
      WHERE memberid=#{memberid} AND passwd=#{passwd} AND grade !=99
    </select>
  
    <!-- 패스워드 변경 -->
    <update id="passwd_update" parameterType="HashMap">
      UPDATE member SET
      passwd=#{passwd}
      WHERE memberid=#{memberid} AND grade !=99
    </update>
    
    <!-- 로그인 -->
    <select id="login" resultType="int" parameterType="Map">
      SELECT COUNT(memberid) as cnt
      FROM member
      WHERE id=#{id} AND passwd=#{passwd} AND grade!=99
    </select>
    
    <!-- 아이디 찾기 -->
    <select id="find_id" resultType="String" parameterType="String">
      SELECT id FROM member WHERE email = #{email} AND grade !=99
    </select>
    
    <!-- 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM member
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE id LIKE '%' || #{word} || '%'
         OR name LIKE '%' || #{word} || '%'
         OR email LIKE '%' || #{word} || '%'
      </otherwise>
    </choose>
  </select> 
  
    <!-- 검색 목록 + 페이징 + 메인 이미지 -->   
    <select id="list_by_search_paging" 
            resultType="dev.mvc.member.MemberVO" parameterType="HashMap">
    SELECT memberid, id, passwd, name, phone, email, address, grade, r
    FROM (
              SELECT memberid, id, passwd, name, phone, email, address, grade, rownum as r
              FROM (
                       SELECT memberid, id, passwd, name, phone, email, address, grade
                       FROM member
                       <choose>
                        <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                          
                        </when>
                        <otherwise>
                          WHERE id LIKE '%' || #{word} || '%'  <!-- ||: 결합, %첫눈% -->
                             OR name LIKE '%' || #{word} || '%'
                             OR email LIKE '%' || #{word} || '%'
                        </otherwise>
                       </choose>
                        ORDER BY memberid ASC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
  </select> 
    
    
</mapper> 
